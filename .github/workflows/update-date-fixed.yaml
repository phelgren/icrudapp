name: Update "Date Fixed" Field on Status Change

on:
  issues:
    types:
      - labeled

jobs:
  update_date_fixed:
    runs-on: [self-hosted, windows, x64]
    permissions:
      issues: write
      contents: read
    steps:

      - name: Get the name
        run: |
          echo "LABEL_NAME=${{ github.event.label.name }}" >> $GITHUB_ENV 
      
      # Step 1: Check for Status is "Ready for QA"
      - name: Check if Status is "Ready for QA"
          echo " The label is $LABEL_NAME"
        id: check_status
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const body = issue.body || "";
            
            // Parse issue status from the issue body or labels
          
            const statusReadyForQA = $LABEL_NAME == "Label added: Ready for QA";
            
            if (statusReadyForQA) {
              console.log("Status changed to 'Ready for QA'");
              core.setOutput("status_ready_for_qa", "true");
            } else {
              console.log("Status not changed to 'Ready for QA'.");
              core.setOutput("status_ready_for_qa", "false");
            }

      # Step 2: Update "Date Fixed" Field with Today's Date
      - name: Update "Date Fixed" Custom Field
        if: steps.check_status.outputs.status_ready_for_qa == 'true'
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          query: |
            mutation UpdateProjectField($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: String!) {
              updateProjectV2ItemFieldValue(
                input: {projectId: $projectId, itemId: $itemId, fieldId: $fieldId, value: {text: $value}}
              ) {
                projectV2Item {
                  id
                }
              }
            }
          variables: |
            {
              "projectId": "PVT_kwHOAAFgjc4AuhQQ",
              "itemId": "${{ github.event.issue.node_id }}",
              "fieldId": "PVTF_lAHOAAFgjc4AuhQQzglGg2Y",
              "value": "${{ steps.date.outputs.today_date }}"
            }

      # Step 3: Get Today's Date
      - name: Set Today's Date (Windows)
        id: date
        run: |
          $today = Get-Date -Format yyyy-MM-dd
          echo "today_date=$today" >> $env:GITHUB_ENV
        shell: pwsh

