name: Update Fixed Date Field

on:
  issues:
      types: [opened, edited, deleted, transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]
jobs:
  update-date-field:
    runs-on: ubuntu-latest

    steps:
    - name: Set up GH_TOKEN
      shell: bash
      run: echo "GH_TOKEN=$GH_TOKEN" >> $GITHUB_ENV
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
    
    - name: Check label and save custom field value
      id: check_label
      run: echo "::set-output name=custom_field::${{ github.event.issue.labels[0].name }}"
    
    - name: Set current date
      id: set_date
      run: echo "::set-output name=current_date::$(date +'%Y-%m-%d')"

    - name: Update Fixed Date Field
      if: steps.check_label.outputs.custom_field == 'Ready for QA'
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        PROJECT_ID="PVT_kwHOAAFgjc4AuhQQ"
        FIELD_ID="PVTF_lAHOAAFgjc4AuhQQzglGg2Y"
        ITEM_ID="PVTI_lAHOAAFgjc4AuhQQzgVwqTw" # Replace with the actual item ID
        DATE_VALUE="${{ steps.set_date.outputs.current_date }}"
        
        gh api graphql -f query='
        mutation updateDateField($projectId: ID!, $itemId: ID!, $fieldId: ID!, $value: Date!) {
          updateProjectV2ItemFieldValue(
            input: {
              projectId: $projectId
              itemId: $itemId
              fieldId: $fieldId
              value: { date: $value }
            }
          ) {
            projectV2Item {
              id
            }
          }
        }' -f projectId="$PROJECT_ID" -f itemId="$ITEM_ID" -f fieldId="$FIELD_ID" -f value="$DATE_VALUE"

    - name: Echo Status Field
      if: steps.check_label.outputs.custom_field == 'Ready for QA'
      shell: bash
      run: |
        echo "The Status field value is: ${{ steps.check_label.outputs.custom_field }}"
